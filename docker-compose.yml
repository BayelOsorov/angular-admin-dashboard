version: '3'

services:
    nodejs:
        build: .
        image: operatordashboard
        container_name: frontend-angular
        restart: unless-stopped
        networks:
            - app-network
        # environment:
        # env_file: .env.staging
        volumes:
            - dhparam:/usp/app
        ports:
            - '8000:5000'
    webserver:
        build: .
        image: nginx:1.21.3-alpine
        container_name: webserver
        restart: unless-stopped
        ports:
            - '80:80'
            - '443:443'
        volumes:
            #      - web-root:/var/www/html
            - ./nginx-conf:/etc/nginx/conf.d
            - acme-certs:/etc/letsencrypt
            - dhparam:/etc/ssl/certs
        #      - certbot-var:/var/lib/letsencrypt
        depends_on:
            - nodejs
        networks:
            - app-network

#  certbot:
#    image: certbot/certbot
#    container_name: certbot
#    volumes:
#      - certbot-etc:/etc/letsencrypt
#      - certbot-var:/var/lib/letsencrypt
#      - web-root:/var/www/html
#    depends_on:
#      - webserver
#    command: certonly --webroot --webroot-path=/var/www/html --email sammy@example.com --agree-tos --no-eff-email --staging -d example.com  -d www.example.com

volumes:
    acme-certs:
        driver: local
        driver_opts:
            type: none
            device: ./acme-certs/
            o: bind
    #  certbot-var:
    #  web-root:
    #    driver: local
    #    driver_opts:
    #      type: none
    #      device: /home/sammy/node_project/views/
    #      o: bind
    dhparam:
        driver: local
        driver_opts:
            type: none
            device: ./dhparam/
            o: bind

networks:
    app-network:
        driver: bridge
